{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,eAAe,cACpCC,EAAcF,SAASG,cAAc,iBACrCC,EAAcJ,SAASG,cAAc,iBACrCE,EAAeL,SAASG,cAAc,iBAEtCG,EAAgBC,EAAEC,UAASC,UAC/B,MAAMC,EAAaX,EAAUY,MAAMC,OAMnC,GAJAV,EAAYW,UAAY,GACxBT,EAAYS,UAAY,GACxBR,EAAaS,YAAc,GAER,KAAfJ,EAIJ,IACE,MAAMK,QAAkB,EAAAlB,EAAAmB,gBAAeN,GAEnCK,EAAUE,OAAS,GACrBC,SAASC,OAAOC,KAAK,8DACZL,EAAUE,QAAU,GAAKF,EAAUE,QAAU,GACtDI,EAAmBN,GACW,IAArBA,EAAUE,OACnBK,EAAmBP,EAAU,IAE7BG,SAASC,OAAOC,KAAK,2C,CAEvB,MAAOG,GACPL,SAASC,OAAOC,KAAK,GAAGG,EAAMC,U,IAE/B,KAEGH,EAAsBN,IACxBb,EAAYW,UAAY,GAExBE,EAAUU,SAASC,IACjB,MAAMC,EAAW3B,SAAS4B,cAAc,MAClCC,EAAUC,EAAWJ,GAE3BK,QAAQC,IAAI,WAAYN,GACxBK,QAAQC,IAAI,YAAaH,GAEzBF,EAASd,UAAY,qBACTgB,WAAiBH,EAAQO,KAAKC,2BAClCR,EAAQO,KAAKC,sBAGrBP,EAASQ,iBAAiB,SAAS,IAAMb,EAAmBI,KAC5DxB,EAAYkC,YAAYT,EAAS,GACjC,EAGEG,EAAcJ,GACdA,EAAQW,OAASX,EAAQW,MAAMC,IAC1BZ,EAAQW,MAAMC,IACZZ,EAAQa,MAAgC,iBAAjBb,EAAQa,KACjCb,EAAQa,KAGV,GAGHjB,EAAsBI,IAC1B,MAAMc,EAAyC,iBAAtBd,EAAQc,UAC7BC,OAAOC,KAAKhB,EAAQc,WAAWG,KAAK,MACpC,iBAEEC,EAAW,qBACHd,EAAWJ,YAAkBA,EAAQO,uBAC3CP,EAAQO,KAAKC,mDACYR,EAAQmB,sDACLnB,EAAQoB,wDACTN,cAEnCpC,EAAYS,UAAY+B,CAAQ,EAGpC7C,EAAUoC,iBAAiB,QAAS7B","sources":["src/index.js"],"sourcesContent":["import { fetchCountries } from './fetchCountries.js';\n\nconst searchBox = document.getElementById('search-box');\nconst countryList = document.querySelector('.country-list');\nconst countryInfo = document.querySelector('.country-info');\nconst notification = document.querySelector('.notification');\n\nconst debounceFetch = _.debounce(async () => {\n  const searchTerm = searchBox.value.trim();\n\n  countryList.innerHTML = '';\n  countryInfo.innerHTML = '';\n  notification.textContent = '';\n\n  if (searchTerm === '') {\n    return;\n  }\n\n  try {\n    const countries = await fetchCountries(searchTerm);\n\n    if (countries.length > 10) {\n      Notiflix.Notify.info('Too many matches found. Please enter a more specific name.');\n    } else if (countries.length >= 2 && countries.length <= 10) {\n      displayCountryList(countries);\n    } else if (countries.length === 1) {\n      displayCountryInfo(countries[0]);\n    } else {\n      Notiflix.Notify.info('Oops, there is no country with that name');\n    }\n  } catch (error) {\n    Notiflix.Notify.info(`${error.message}`);\n  }\n}, 300);\n\nconst displayCountryList = (countries) => {\n    countryList.innerHTML = '';\n  \n    countries.forEach((country) => {\n      const listItem = document.createElement('li');\n      const flagUrl = getFlagUrl(country);\n  \n      console.log('Country:', country);\n      console.log('Flag URL:', flagUrl);\n  \n      listItem.innerHTML = `\n      <img src=\"${flagUrl}\" alt=\"${country.name.common}\" />\n      <span>${country.name.common}</span>\n    `;\n      \n      listItem.addEventListener('click', () => displayCountryInfo(country));\n      countryList.appendChild(listItem);\n    });\n  };\n\n  const getFlagUrl = (country) => {\n    if (country.flags && country.flags.svg) {\n      return country.flags.svg;\n    } else if (country.flag && typeof country.flag === 'string') {\n      return country.flag;\n    }\n  \n    return '';\n  };\n\n  const displayCountryInfo = (country) => {\n    const languages = typeof country.languages === 'object'\n      ? Object.keys(country.languages).join(', ')\n      : 'No information';\n  \n    const infoHTML = `\n      <img src=\"${getFlagUrl(country)}\" alt=\"${country.name}\" />\n      <h2>${country.name.common}</h2>\n      <p><strong>Capital:</strong> ${country.capital}</p>\n      <p><strong>Population:</strong> ${country.population}</p>\n      <p><strong>Languages:</strong> ${languages}</p>\n    `;\n    countryInfo.innerHTML = infoHTML;\n  };\n\nsearchBox.addEventListener('input', debounceFetch);\n"],"names":["$gXocT","parcelRequire","$1f0dc3b9307be026$var$searchBox","document","getElementById","$1f0dc3b9307be026$var$countryList","querySelector","$1f0dc3b9307be026$var$countryInfo","$1f0dc3b9307be026$var$notification","$1f0dc3b9307be026$var$debounceFetch","_","debounce","async","searchTerm","value","trim","innerHTML","textContent","countries","fetchCountries","length","Notiflix","Notify","info","$1f0dc3b9307be026$var$displayCountryList","$1f0dc3b9307be026$var$displayCountryInfo","error","message","forEach","country","listItem","createElement","flagUrl","$1f0dc3b9307be026$var$getFlagUrl","console","log","name","common","addEventListener","appendChild","flags","svg","flag","languages","Object","keys","join","infoHTML","capital","population"],"version":3,"file":"index.157cd67d.js.map"}